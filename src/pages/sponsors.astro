---
import { contentfulClient } from '../lib/contentful';
import MainLayout from '../layouts/MainLayout.astro';
import ImageHeader from '../components/ImageHeader.astro';
import SponsorBox from '../components/Sponsorship/SponsorBox.astro';

interface Sponsor {
  fields: {
    logo: {
      fields: {
        file: {
          url: string;
        };
      };
    };
    name: string;
    blurb: string;
    buttonText: string;
    buttonLink: string;
    buttonVisible: boolean;
    tier: string;
    year: number;
    order: number;
  };
  contentTypeId: string;
}

const sponsorsResponse = await contentfulClient.getEntries<Sponsor>({
  content_type: 'sponsor',
  //@ts-ignore
  order: '-fields.order',
});

//Make an array of all the tiers
const tiers: string[] = [];
sponsorsResponse.items.forEach((item) => {
  if (!tiers.includes(item.fields.tier)) {
    tiers.push(item.fields.tier);
  }
});

//Capitalize first letter of each tier
tiers.forEach((tier, index) => {
  tiers[index] = tier.charAt(0).toUpperCase() + tier.slice(1);
});
---

<MainLayout title="Knight Owls - Our Sponsors">
  <ImageHeader
    title="Our Amazing Sponsors"
    background="/images/headers/sponsors.webp"
  />
  <div class="content">
    // ...

    {
      tiers.map((tier) => (
        <div class="tier" id={tier.toLowerCase()}>
          <h2>{tier} Sponsors</h2>
          <div class="sponsors">
            {sponsorsResponse.items
              .filter(
                (item) =>
                  item.fields.tier === tier.toLowerCase() &&
                  item.fields.year === 2023
              )
              .map((item) => {
                // Check if the required properties exist
                {
                  return (
                    <div data-aos="zoom-in-up" class="sponsorbox">
                      <SponsorBox
                        name={item.fields.name}
                        description={item.fields.blurb}
                        image={item.fields.logo.fields.file.url}
                        buttonText={item.fields.buttonText}
                        buttonLink={item.fields.buttonLink}
                        buttonVisible={item.fields.buttonVisible}
                      />
                    </div>
                  );
                }
              })}
          </div>
        </div>
      ))
    }

    // ...
  </div>

  <style>
    .content {
      margin-top: 25px;
      line-height: 2;
    }
    .sponsors {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      align-items: center;
      width: 100%;
      text-align: center;
      grid-gap: 50px;
    }
    .showDefault {
      display: flex !important;
    }
    h2 {
      text-align: center;
      text-decoration: underline;
      text-decoration-color: var(--blue);
      font-size: 40px;
      margin-bottom: 3.5%;
      flex-basis: 100%;
    }
  </style>
</MainLayout>
